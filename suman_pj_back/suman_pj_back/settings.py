"""
Django settings for suman_pj_back project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from django.conf import settings

from datetime import timedelta
    
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='your-insecure-dev-secret-key-for-local-build-only') 

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['https://suman-project-cap5.onrender.com','*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',

    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',

    'Inquiries',
    'question',
    'django_filters',
    'user',
    'core',
    'analytics',

    
]

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS' : ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_AUTHENTICATION_CLASSES' : ('rest_framework_simplejwt.authentication.JWTAuthentication',),
}

SIMPLE_JWT = {
    # -- 토근 만료 시간 설정 
    'ACCESS_TOKEN_LIFETIME' : timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME' : timedelta(days = 1),
    # -- 리프레시 토큰 갱신 정책
    'ROTATE_REFRESH_TOKENS' : True,
    'BLACKLIST_AFTER_ROTATION' : True,
    'UPDATE_LAST_LOGIN' : False,
    # -- 토큰 서명 및 암호화 설정
    'ALGORITHM' : 'HS256',
    'SIGNING_KEY' : 'SECRET_KEY',
    'VERIFYING_KEY' : None,
    'AUDIENCE' : None,
    'ISSUER' : None,
    'JWK_URL' : None,
    'LEEWAY' : 0,
    # -- HTTP 헤더 및 사용자 식별 설정
    'AUTH_HEADER_TYPES' : ('Bearer',),
    'AUTH_HEADER_NAME' : 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD' : 'id',
    'USER_ID_CLAIM' : 'user_id',
    'USER_AUTHENTICATION_RULE' : 'rest_framework_simplejwt.authentication.default_user_authentication_rule',
    # -- 토큰 클래스 및 타입 설정
    'AUTH_TOKEN_CLASSES' : ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM' : 'token_type',
    'TOKEN_USER_CLASS' : 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM' : 'jti',
    # -- 슬라이딩 토큰 설정(선택사항이며 기본적으로는 사용하지 않음.)
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM' : 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME' : timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME' : timedelta(days=1),
    

}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'suman_pj_back.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'suman_pj_back.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', 
        'NAME': config('DB_NAME', default = 'your_local_db_name'), 
        'USER': config('DB_USER', default = 'your_local_db_user'), 
        'PASSWORD': config('DB_PASSWORD', default = 'your_local_db_password'),
        'HOST': config('DB_HOST', default = 'localhost'),
        'PORT': config('DB_PORT', default = '5432'),     
    }
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "https://www.suman.co.kr/",
]

CORS_ALLOW_ALL_ORIGINS = DEBUG

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# templates 디렉토리 설정 확인
TEMPLATES[0]['DIRS'] += [os.path.join(BASE_DIR, 'templates')]


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'analytics_app': { # 이 부분을 여러분의 앱 이름(예: core)으로 변경
            'handlers': ['console'],
            'level': 'DEBUG', # 디버그 레벨로 설정하여 상세 로그를 볼 수 있도록
            'propagate': False,
        },
    },
}
